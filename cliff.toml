# Config: https://git-cliff.org/docs/configuration

[changelog]
header = """
## What's Changed\n
All notable changes to this project will be documented in this file.\n
"""

# template for the changelog body
body = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}\
{%- endmacro -%}

{%- macro pr_link(num) -%}
    [#{{ num }}]({{ self::remote_url() }}/pull/{{ num }})\
{%- endmacro -%}

{% for group, commits in commits | group_by(attribute="group") %}
    {% for commit in commits | filter(attribute="merge_commit", value=true)
    %}
        {%- if loop.first -%}
        ### {{ group | striptags | trim | upper_first }}
        {% raw %}\n{% endraw %}\
        {% endif -%}

        {%- if commit.github.pr_labels is containing("skip-release-notes") -%}
            {%- continue -%}
        {%- endif -%}

        {%- if commit.github.pr_title -%}
            {%- set commit_message = commit.github.pr_title | split(pat=":") | last | trim -%}
        {%- else -%}
            {%- set commit_message = commit.message -%}
        {%- endif -%}

        {%- set_global themes = [] -%}
        {%- for label in commit.github.pr_labels -%}
            {%- set_global theme = label | trim_start_matches(pat='theme:') -%}
            {%- if label is starting_with("theme:") -%}
                {%- set_global themes = themes | concat(with=theme) -%}
            {%- endif -%}\
        {%- endfor -%}

        {% if commit.scope -%}
            {%- set default_scope = commit.scope | trim -%}
        {%- elif commit.github.pr_title and commit.github.pr_title is containing(":") -%}
            {%- set default_scope = commit.github.pr_title | split(pat=":") | first | trim -%}
        {%- else -%}
            {%- set default_scope = "general" -%}
        {%- endif -%}

        {%- if themes -%}
            - *{{ themes | join(sep="|") | replace(from="theme:", to="") }}*: {{ commit_message }} - {{ self::pr_link(num=commit.github.pr_number) }}
        {% elif commit.scope -%}
            - *{{ commit.scope }}*: {{ commit_message }} - {{ self::pr_link(num=commit.github.pr_number) }}
        {% else -%}
            - *{{ default_scope }}*: {{ commit_message }} - {{ self::pr_link(num=commit.github.pr_number) }}
        {% endif -%}
    {%- endfor -%}
{% endfor %}
"""


# template for the changelog footer
# Notes:
# * The `release.previous.version` value will not be correct when it is not run on a tag
#
footer = """

{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{% for release in releases -%}
    {% if release.version -%}
        {% if loop.first -%}
            {% if release.previous.version -%}
                {% raw %}\n\n{% endraw %}\
                **Full Changelog**: \
                    {{ self::remote_url() }}/compare/{{release.previous.version}}..{{ release.version }}
            {% endif -%}
        {% endif -%}
    {% else -%}
        [unreleased]: {{ self::remote_url() }}/compare/{{ release.previous.version }}..HEAD
    {% endif -%}
{% endfor %}

<!-- generated by git-cliff -->
"""
# remove the leading and trailing whitespace from the templates
trim = true


[git]
conventional_commits = false
filter_unconventional = false
split_commits = false

commit_parsers = [
    { message = "disable memory logging by default to avoid log spammi", skip = true },
    
    # skip commits matching:
    { message = "version bump", skip = true },
    { message = "prepare for release", skip = true },
    { message = "Merge branch 'main' into", skip = true },

    # classify commits into sections
    { message = "feat", group = "<!-- 0 -->:rocket: Features" },
    { message = "doc", group = "<!-- 2 -->:notebook: Documentation" },
    { message = "fix", group = "<!-- 1 -->:bug: Bug Fixes" },
    { message = "perf", group = "<!-- 3 -->:runner: Performance" },
    { message = "refactor", group = "<!-- 4 -->:sailboat: Refactor" },
    { message = "style", group = "<!-- 5 -->:nail_care: Styling" },
    { message = "test", group = "<!-- 6 -->:mag_right: Testing" },
    { message = "ci:", group = "<!-- 9 -->:mag_right: CI/CD" },
    { message = "chore", group = "<!-- 7 -->:clipboard: Miscellaneous Tasks" },
    { body = ".*security", group = "<!-- 8 -->:lock: Security" },
    { message = ".*(deps|Bump).*", group = "Dependencies"},
    { message = ".*", group = "<!-- 7 -->:clipboard: Miscellaneous Tasks"},
]

protect_breaking_commits = false
filter_commits = false
ignore_tags = "^([a-zA-Z]+|.*-rc)"
tag_pattern = "[0-9].*"
topo_order = true
sort_commits = "oldest"

link_parsers = [
    { pattern = "#(\\d+)", href = "https://github.com/thin-edge/thin-edge.io/issues/$1"},
]

[remote.github]
owner = "thin-edge"
repo = "thin-edge.io"
